addinslist:::addinslistAddin()
install.packages("httpuv")
addinslist:::addinslistAddin()
install.packages("curl")
addinslist:::addinslistAddin()
install.packages("backports")
addinslist:::addinslistAddin()
install.packages("rprojroot")
addinslist:::addinslistAddin()
install.packages("evaluate")
addinslist:::addinslistAddin()
install.packages("knitr")
addinslist:::addinslistAddin()
install.packages("rmarkdown")
install.packages("tidyverse")
addinslist:::addinslistAddin()
install.packages("xml2")
addinslist:::addinslistAddin()
install.packages("httr")
addinslist:::addinslistAddin()
install.packages("rvest")
addinslist:::addinslistAddin()
ggThemeAssist:::ggThemeAssistAddin()
install.packages("rstudioapi")
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
g <- ggplot(data = diamonds, aes(x = price))
library(ggplot2)
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
ggExtra:::ggMarginalGadgetAddin ()
g <- ggplot(data = diamonds, aes(x = price, y = cut))
ggExtra:::ggMarginalGadgetAddin ()
g <- ggplot(data = diamonds, aes(x = cut, y = price))
ggExtra:::ggMarginalGadgetAddin ()
g <- ggplot(data = diamonds, aes(x = cut))
g + geom_point(aes(color = cut))
g <- ggplot(data = diamonds, aes(x = cut))
library(ggplot2)
g <- ggplot(data = diamonds, aes(x = cut))
g + geom_point(aes(color = cut))
g + geom_density(aes(color = cut))
g <- ggplot(data = diamonds, aes(x = price))
g + geom_density(aes(color = cut))
ggExtra:::ggMarginalGadgetAddin ()
ggExtra::ggMarginal(
p = p1,
type = 'density',
margins = 'both',
size = 5,
colour = 'black',
fill = '#E02626'
)
p1 <- g + geom_density(aes(color = cut))
ggExtra::ggMarginal(
p = p1,
type = 'density',
margins = 'both',
size = 5,
colour = 'black',
fill = '#E02626'
)
p1 <- g + geom_density(aes(color = cut))
p1 <- g + geom_density(aes(color = cut))
p1
install.packages("dplyr")
install.packages("leaflet")
install.packages("tidyr")
install.packages("shiny")
library(ggplot2)
texas = read.csv("data/texas.csv")
head(texas)
setwd("C:/Users/fisix/Desktop/NYC Data Science/slides/ggplot")
texas = read.csv("texas.csv")
head(texas)
g = ggplot(texas, aes(x=long, y=lat))
g + geom_point()
g + geom_polygon(aes(group=group))
install.packages("maps")
library(maps)
counties = map_data('county')
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group))
?geom_polygon()
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group, size=2))
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group), color='grey')
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group), color='white')
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group), color='white', size=.5)
ggplot(counties, aes(x=long, y=lat)) +
geom_polygon(aes(group=group, fill=group), color='white', size=.1)
tx <- g + geom_polygon(aes(group = group, fill = bin))
tx
tx + ggtitle("Population of Texas Counties")
tx = tx + ggtitle("Population of Texas Counties")
tx = tx + ggtitle("Population of Texas Counties") + coord_map()
tx
install.packages("mapproj")
tx = tx + ggtitle("Population of Texas Counties") + coord_map()
tx
install.packages("RColorBrewer")
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
tx + scale_fill_brewer(palette = 'Blues')
tx <- g + geom_polygon(aes(group = group, fill = bin), color='black')
tx + scale_fill_brewer(palette = 'Blues')
install.packages("ggthemes")
tx + xlab('') + ylab('') + theme_bw() + ggtitle('Map of Texas') + scale_fill_brewer(palette = 'Blues')
library(ggplot2)
data(cars)
cars_scatter = ggplot(cars, aes(x=speed, y=dist)) + geom_point()
cars_scatter
+ ggtitle('Stopping Distance at Different Speeds')
# 2
cars_scatter = cars_scatter + xlab('Speed (mpg)') + ylab('Stopping Distance (ft)') +
ggtitle('Stopping Distance at Different Speeds')
cars_scatter
# 3
cars_scatter = cars_scatter + geom_point(aes(col='red', pch=17))
cars_scatter
# 3
cars_scatter = cars_scatter + geom_point(col='red', pch=17)
cars_scatter
# 3
cars_scatter + geom_point(col='red', pch=17)
# 3
cars_scatter + geom_point(color='red', pch=17)
# 3
cars_scatter + geom_point(aes(color='red', pch=17)
cars_scatter
# 3
cars_scatter + geom_point(aes(color='red', pch=17))
# 3
cars_scatter + geom_point(aes(color='red'))
# 3
cars_scatter + geom_point(color='red')
# 3
p = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point(col = 'red', pch=17)
p
# 1
cars_scatter = ggplot(cars, aes(x=speed, y=dist)) + geom_point()
# 2
cars_scatter_labeled = cars_scatter + xlab('Speed (mpg)') + ylab('Stopping Distance (ft)') +
ggtitle('Stopping Distance at Different Speeds')
# 3
Cars_scatter_triangles = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point(col = 'red', pch=17)
# 3
cars_scatter_triangles = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point(col = 'red', pch=17)
rm(Cars_scatter_triangles)
data("faithful")
data(faithful)
data(faithful)
library(dplyr)
# 1
my_faithful = faithful %>%
mutate(., length = ifelse(eruptions < 3.2, 'short', 'long'))
my_faithful
# 2
faithful_box = ggplot(my_faithful, aes(x=length, y=waiting)) +
geom_boxplot()
faithful_box
# 2
faithful_box = ggplot(my_faithful, aes(x=reorder(length, waiting), y=waiting)) +
geom_boxplot()
faithful_box
# 3
faithful_density = ggplot(my_faithful, aes(x=length, y=waiting)) +
geom_density()
faithful_density
# 3
faithful_density = ggplot(my_faithful, aes(x=length)) +
geom_density()
faithful_density
# 3
density_data = my_faithful %>%
group_by(., length)
density_data
faithful_density = ggplot(density_data, aes(x=length)) +
geom_density()
faithful_density = ggplot(my_faithful, aes(x=waiting)) +
geom_density(fill=length)
faithful_density
geom_density(aes(fill=length)
faithful_density
faithful_density = ggplot(my_faithful, aes(x=waiting)) +
geom_density(aes(fill=length))
faithful_density
faithful_density = ggplot(my_faithful, aes(x=waiting)) +
geom_density(aes(color=length))
faithful_density
faithful_box
faithful_density
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
head(data)
knicks_wins = data %>%
group_by(., season) %>%
summarise(., ratio = sum(win=='W')/sum(win=='L'))
knicks_wins
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar()
seasonal_winratio
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(identity='stat')
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar()
seasonal_winratio
seasonal_winratio = ggplot(knicks_wins, aes(x=season)) +
geom_bar()
seasonal_winratio
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar()
seasonal_winratio
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity')
seasonal_winratio
# 2
knicks_home_away = data %>%
group_by(., season, visiting) %>%
summarise(., ratio = sum(win=='W')/sum(win=='L'))
knicks_home_away
# 2
knicks_homeaway = data %>%
group_by(., season, visiting) %>%
summarise(., ratio = sum(win=='W')/sum(win=='L'))
rm(knicks_home_away)
seasonal_homeaway = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity', position = 'dodge')
seasonal_homeaway
seasonal_homeaway = ggplot(knicks_homeaway, aes(x=season, y=ratio)) +
geom_bar(stat='identity', position = 'dodge')
seasonal_homeaway
seasonal_homeaway = ggplot(knicks_homeaway, aes(x=season, y=ratio)) +
geom_bar(aes(fill=visiting), stat='identity', position = 'dodge')
seasonal_homeaway
data
knicks_wins
season1 = data %>%
filter(., season=='07-08')
season2 = data %>%
filter(., season=='08-09')
season3 = data %>%
filter(., season=='09-10')
season4 = data %>%
filter(., season=='10-11')
season5 = data %>%
filter(., season=='11-12')
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram() +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = .1) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 5) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 1) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 2) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 3) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 4) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 10) +
facet_wrap(~ season)
seasonal_pointdist
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 3) +
facet_wrap(~ season)
seasonal_pointdist
# 1
knicks_wins = data %>%
group_by(., season) %>%
summarise(., win_ratio = sum(win=='W')/sum(win=='L'))
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity')
seasonal_homeaway = ggplot(knicks_homeaway, aes(x=season, y=ratio)) +
geom_bar(aes(fill=visiting), stat='identity', position = 'dodge')
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=win_ratio)) +
geom_bar(stat='identity')
knicks_wins
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity')
# 1
knicks_wins = data %>%
group_by(., season) %>%
summarise(., ratio = sum(win=='W')/sum(win=='L'))
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity')
# 2
knicks_homeaway = data %>%
group_by(., season, visiting) %>%
summarise(., ratio = sum(win=='W')/sum(win=='L'))
seasonal_homeaway = ggplot(knicks_homeaway, aes(x=season, y=ratio)) +
geom_bar(aes(fill=visiting), stat='identity', position = 'dodge')
# 3
seasonal_pointdist = ggplot(data, aes(x=points)) +
geom_histogram(binwidth = 3) +
facet_wrap(~ season)
# 4
opponent_stats = knicks_wins %>%
group_by(., opponent) %>%
summarise(., avg_win_ratio = mean(ratio))
# 4
opponent_stats = knicks_wins %>%
group_by(., opponent) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L'))
# 4
opponent_stats = data %>%
group_by(., opponent) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L'))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L'))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L')) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(points-opp))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L'), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(point_diff))
opponent_stats
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/sum(win=='L'), point_diff = points-opp)
opponent_stats
# 1
knicks_wins = data %>%
group_by(., season) %>%
summarise(., ratio = sum(win=='W')/length(win))
seasonal_winratio = ggplot(knicks_wins, aes(x=season, y=ratio)) +
geom_bar(stat='identity')
knicks_wins
seasonal_winratio
# 2
knicks_homeaway = data %>%
group_by(., season, visiting) %>%
summarise(., ratio = sum(win=='W')/length(win))
knicks_homeaway
seasonal_homeaway = ggplot(knicks_homeaway, aes(x=season, y=ratio)) +
geom_bar(aes(fill=visiting), stat='identity', position = 'dodge')
seasonal_homeaway
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(point_diff))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp)
opponent_stats
%>%
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(point_diff))
opponent_stats
summarise(., avg_win_ratio = mean(mean(win_ratio)), avg_point_diff =mean(mean(point_diff))
# 4
opponent_stats = data %>%
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(mean(win_ratio)), avg_point_diff =mean(mean(point_diff)))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent, season) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(point_diff))
opponent_stats
# 4
opponent_stats = data %>%
group_by(., opponent) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp) %>%
summarise(., avg_win_ratio = mean(win_ratio), avg_point_diff = mean(point_diff))
opponent_stats
data %>%
group_by(., opponent) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp
data %>%
data %>%
group_by(., opponent) %>%
mutate(., win_ratio = sum(win=='W')/length(win), point_diff = points-opp)
opponent_stats
opponent_graph = ggplot(opponent_stats, aes(x=avg_win_ratio, y=avg_point_diff)) +
geom_point()
opponent_graph
install.packages("openair")
library(maps)
library(ggplot2)
world <- map_data("world")
naples <- ggplot(world, aes(x=long, y=lat, group=group) ) +
geom_path(color='gray10', size=0.3) +
geom_point(x=-81, y=26, size=10, shape='*') +
scale_y_continuous(breaks=(-2:2) * 30) +
scale_x_continuous(breaks=(-4:4) * 45) +
coord_map("ortho", orientation=c(26, -80, 0))+
theme(panel.grid.major = element_line(colour = "gray50"),
panel.background = element_rect(fill = "white"),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank() ) +
ggtitle("Naples, Florida")
naples
install.packages("ggmap")
install.packages("XML")
install.packages("RJSONIO")
install.packages("googleVis")
install.packages("WDI")
install.packages("rjson")
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("GGally")
temp = list.files(pattern="names/*.csv")
temp
setwd("C:/Users/fisix/Desktop/NYC Data Science/homework/NYCDSA_Homework/ggplot")
temp = list.files(pattern="names/*.csv")
temp
temp = list.files(path='names/', pattern="*.csv")
temp
setwd("C:/Users/fisix/Desktop/NYC Data Science/homework/NYCDSA_Homework/ggplot/names")
temp = list.files(pattern="*.csv")
temp
temp = list.files(pattern="*.txt")
temp
pwd
cwd
pwd()
pwd
pwd
pwd
setwd("C:/Users/fisix/Desktop/NYC Data Science/homework/NYCDSA_Homework/ggplot/names")
pwd
getwd
getwd()
temp = list.files(pattern="yob*.txt")
temp
temp = list.files()
temp
setwd("C:/Users/fisix/Desktop/NYC Data Science/homework/NYCDSA_Homework/ggplot/names")
temp = list.files()
temp
temp = list.files(path = 'names/', pattern="*.txt")
temp
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, read.csv)
myfiles = lapply(temp, read.delim)
temp_correct = lapply(temp, paste0, 'names/')
temp_correct
temp_correct = lapply('names/', paste0, temp)
temp_correct
myfiles = lapply(temp, read.csv)
setwd("C:/Users/fisix/Desktop/NYC Data Science/homework/NYCDSA_Homework/ggplot")
temp_correct = lapply('./names/', paste0, temp)
myfiles = lapply(temp, read.csv)
myfiles = do.call(rbind, lapply(temp_correct, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles = do.call(rbind, lapply(temp_correct[[1]], function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
myfiles = do.call(rbind, lapply(temp_correct[[]], function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles
myfiles = do.call(rbind, lapply(temp_correct, function(x) read.csv(x[[1]], stringsAsFactors = FALSE)))
myfiles
temp_correct = as.vector(lapply('./names/', paste0, temp))
temp_correct
myfiles = do.call(rbind, sapply(temp_correct, function(x) read.csv(x, stringsAsFactors = FALSE)))
myfiles = sapply(sapply(temp_correct, function(x) read.csv(x, stringsAsFactors = FALSE)), rbind)
myfiles = sapply(temp_correct, function(x) read.csv(x, stringsAsFactors = FALSE))
